<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<!-- 配置postgresql的数据源，使用的是druid数据源 -->
	<bean name="postgreSQLDruidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <!-- 数据库连接基础信息 -->  
        <property name="driverClassName" value="${jdbc.postgresql.driver}" />
		<property name="url" value="${jdbc.postgresql.url}" />
		<property name="username" value="${jdbc.postgresql.username}" />
		<property name="password" value="${jdbc.postgresql.password}" />
  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}" />  
        <!-- 连接池最大使用连接数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}" />  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}" />  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}" />  
  
        <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 -->  
        <!-- <property name="poolPreparedStatements" value="true" /> <property   
            name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->  
  
        <!-- 验证数据库连接有效性，要求查询语句 -->  
        <property name="validationQuery" value="${jdbc.validationQuery}" />  
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->  
        <property name="testWhileIdle" value="true" />  
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置true会降低性能。 -->  
        <property name="testOnBorrow" value="false" />  
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置true会降低性能 -->  
        <property name="testOnReturn" value="false" />  
  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
  
        <!-- 对于长时间不使用的连接强制关闭 -->  
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />  
        <!-- 关闭超过30分钟的空闲连接，1800秒，也就是30分钟 -->  
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />  
        <!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="true" />  
  
        <!-- 监控数据库 -->  
        <!-- <property name="filters" value="mergeStat" /> -->  
        <property name="filters" value="stat" />  
    </bean>  
    
    <!-- 配置druid监控 -->  
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
    
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"  
        scope="prototype">  
        <property name="patterns">  
            <list>  
                <value>org.demo.*</value>  
            </list>  
        </property>  
    </bean>
    
    <aop:config>  
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />  
    </aop:config>
    <!-- 配置druid监控end -->  

	<!-- 配置 postgreSQL SessionFactory -->
	<bean id="postgreSQLDruidSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="postgreSQLDruidDataSource" />
		<!-- <property name="configLocation" value="classpath:mysql_mybatis-config.xml"/> -->
		<property name="mapperLocations">
			<list>
				<value>classpath:org/demo/dao/mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 创建Mapper层的对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.demo.dao.service" />
		<property name="sqlSessionFactoryBeanName" value="postgreSQLDruidSessionFactory"/>
	</bean>
</beans>  